" --filter peakPicking true 1- --mzXML --32 -o ",
shQuote(whereFilesCreated),
" --outfile ",
paste0(fileNames[[x]],".mzXML", " --ignoreUnknownInstrumentError")
)
})
fileNames
rawFiles <- list.files(pathToRawData, recursive = FALSE, full.names = TRUE)
commands <- convertRawDataCommands(pathToRawData = dirname(mzFileLocation),
whereFilesCreated = file.path(dirname(mzFileLocation), "test"),
msConvertFolderLocation = mzEasy::findpwiz())
commands
library(mzEasy)
extData <- system.file("extdata",  package="mzEasy")
extData
library(mzEasy)
commands <- convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = mzEasy::findpwiz())
commands
commands[[1]]
commands[[1]][[1]]
strsplit(commands[[1]], "\\\""
strsplit(commands[[1]], "\\\"")
all.equal("a", "b")
all.equal("a", "a")
all.equal("a", "bas")
commands <- strsplit(commands[[1]], "\\\"")[[1]]
commands
commands <- convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = mzEasy::findpwiz())
commands <- strsplit(commands[[1]], "\\\"")[[1]]
commands
system.file("extdatam/chromatogram/Example_Chromatogram.mzXML",  package="mzEasy")
system.file("extdata/chromatogram/Example_Chromatogram.mzXML",  package="mzEasy")
commands
install.packages(testthat)
install.packages("testthat")
install.packages("roxygen2")
length(commands)
library(mzEasy)
length(commands)
length(commands)mzEasy::findpwiz()
mzEasy::findpwiz()
progFiles <- shell(cmd= "ECHO %ProgramFiles%\\ProtedoWizard", translate=TRUE, intern=T)
progFiles
proteoWizardLocation <- list.files(progFiles, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
proteoWizardLocation
commands <- convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = mzEasy::findpwiz())
progFiles <- shell(cmd= "ECHO %ProgramFiles%\\ProtedoWizard", translate=TRUE, intern=T)
proteoWizardLocation <- list.files(progFiles, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(proteoWizardLocation) >= 1){ # If length is 1 or greater then msconvert.exe was found (or multiple installations), return one
proteoWizardLocation <- dirname(proteoWizardLocation[[1]])
}
# Check if msconvert was found. If not, look for path provided by user.
if(length(proteoWizardLocation) == 0){
proteoWizardLocation <- readLines("www\\Specify_ProteoWizard_Location.txt")
if (proteoWizardLocation == "\"\""){  # Empty file check
proteoWizardLocation <- "Unable to find msconvert.exe in \"Program Files\" and no location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}else{
# Ensure consistent "/" "\"
proteoWizardLocation <- gsub("\\\\\\\\", "\\\\", proteoWizardLocation)
proteoWizardLocation <- gsub("/", "\\\\", proteoWizardLocation)
if(dir.exists(proteoWizardLocation)){
proteoWizardLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(proteoWizardLocation) >= 1){
proteoWizardLocation <- dirname(proteoWizardLocation[[1]])
}else{
proteoWizardLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}else{
proteoWizardLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}
}
proteoWizardLocation
library(mzEasy)
getwd()
a <-c(1,2,3)
a <- c(1,2,3)
a <- c(1,2,3)
b <- c("a","b","c")
matrix(a,b)
a <- c(1,2,3)
b <- c("a","b","c")
cbind(a,b)
d <- as.matrix(cbind(a,b))
d
colanmes(d) <- c("duh", "donk")
colnames(d) <- c("duh", "donk")
d
?matrix
"www\\Specify_ProteoWizard_Location.txt"
mzEasy::findpwiz(file.path(extData,"fakePwizPath"))
library(mzEasy)
mzEasy::findpwiz(file.path(extData,"fakePwizPath"))
extData <- system.file("extdata",  package="mzEasy")
mzEasy::findpwiz(file.path(extData,"fakePwizPath"))
library(mzEasy)
extData <- system.file("extdata",  package="mzEasy")
mzEasy::findpwiz(file.path(extData,"fakePwizPath"))
file.path(extData,"fakePwizPath")
progFiles <- shell(cmd= "ECHO %ProgramFiles%\\ProteoWizard", translate=TRUE, intern=T)
progFiles
devtools::use_travis()
?devtools::use_travis()
?AUT
?aut
?author
??author
?desc::desc_add_author()
desc::desc_add_author("Chase", "Clark", email="chasec288@gmai.com")
library(mzEasy)
?mzEasy::convertRawDataCommands()
desc::desc_add_author("Chase", "Clark", email="chasec288@gmai.com")
desc::desc_add_author("Chase", "Clark", email="chasec288@gmai.com")
desc::desc_add_author("Chase", "Clark", email="chasec288@gmail.com")
desc::desc_add_author("Chase", "Clark", email="chasec288@gmail.com")
desc::desc_add_author("Chase", "Clark", email="chasec288@gmail.com")
desc::desc_add_author("Chase", "Clark", email="chasec288@gmail.com")
?desc::desc_add_author("Chase", "Clark", email="chasec288@gmail.com")
desc::desc_add_author("Chase", "Clark", email="chasec288@gmail.com", role = "cre")
desc::desc_add_author("Chase", "Clark", email="chasec288@gmail.com", role = "cre")
extData <- system.file("extdata",  package="mzEasy")
mzEasy::findpwiz(file.path(extData,"fakePwizPath"))
proteoWizardLocation = file.path(extData,"fakePwizPath"))
proteoWizardLocation = file.path(extData,"fakePwizPath")
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
msconvertLocation
list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
proteoWizardLocation
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert"
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")
proteoWizardLocation
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
msconvertLocation
length(msconvertLocation)
extData <- system.file("extdata",  package="mzEasy")
file.path(extData, "chromatogram")
convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = mzEasy::findpwiz(userGivenPath = "",
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")))
convertRawDataCommands <- function(pathToRawData, whereFilesCreated, msConvertFolderLocation){
# Get filepaths of raw data files
rawFiles <- list.files(pathToRawData, recursive = FALSE, full.names = TRUE)
# Get the raw data file names
fileNames <- basename(rawFiles)
# Create a list of cmd line calls to run MSConvert on the selected raw data files
lapply(seq_along(fileNames), function(x){
paste0(shQuote(file.path(msConvertFolderLocation, "msconvert.exe")), " ",
shQuote(rawFiles[[x]]),
" --filter peakPicking true 1- --mzXML --32 -o ",
shQuote(whereFilesCreated),
" --outfile ",
paste0(fileNames[[x]],".mzXML", " --ignoreUnknownInstrumentError")
)
})
}
convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = mzEasy::findpwiz(userGivenPath = "",
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")))
# "userGivenPath" = directory that contains "Specify_ProteoWizard_Location.txt"
# "proteoWizardLocation"     = directory that contains msconvert.exe
findpwiz <- function(userGivenPath, proteoWizardLocation){
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){ # If length is 1 or greater then msconvert.exe was found (or multiple installations), return one
msconvertLocation <- dirname(msconvertLocation[[1]])
}
# Check if msconvert was found. If not, look for path provided by user.
if(length(msconvertLocation) == 0){
msconvertLocation <- readLines(file.path(userGivenPath,"Specify_ProteoWizard_Location.txt"))
if (msconvertLocation == "\"\""){  # Empty file check
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and no location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}else{
# Ensure consistent "/" "\"
msconvertLocation <- gsub("\\\\\\\\", "\\\\", msconvertLocation)
msconvertLocation <- gsub("/", "\\\\", msconvertLocation)
if(dir.exists(msconvertLocation)){
msconvertLocation <- list.files(msconvertLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){
msconvertLocation <- dirname(msconvertLocation[[1]])
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}
}
return(msconvertLocation)
}
convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = mzEasy::findpwiz(userGivenPath = "",
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")))
mzEasy::findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")))
mzEasy::findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert"))
mzEasy::findpwiz(proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert"))
file.path(extData,"pwizPath","fake_MSConvert")
mzEasy::findpwiz()
library(mzEasy)
mzEasy::findpwiz(proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert"))
commands <- convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = mzEasy::findpwiz(userGivenPath = "",
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")))
mzEasy::findpwiz(userGivenPath = "",
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert"))
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){ # If length is 1 or greater then msconvert.exe was found (or multiple installations), return one
msconvertLocation <- dirname(msconvertLocation[[1]])
}
# Check if msconvert was found. If not, look for path provided by user.
if(length(msconvertLocation) == 0){
msconvertLocation <- readLines(file.path(userGivenPath,"Specify_ProteoWizard_Location.txt"))
if (msconvertLocation == "\"\""){  # Empty file check
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and no location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}else{
# Ensure consistent "/" "\"
msconvertLocation <- gsub("\\\\\\\\", "\\\\", msconvertLocation)
msconvertLocation <- gsub("/", "\\\\", msconvertLocation)
if(dir.exists(msconvertLocation)){
msconvertLocation <- list.files(msconvertLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){
msconvertLocation <- dirname(msconvertLocation[[1]])
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}
}
"userGivenPath"
userGivenPath <- ""
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){ # If length is 1 or greater then msconvert.exe was found (or multiple installations), return one
msconvertLocation <- dirname(msconvertLocation[[1]])
}
# Check if msconvert was found. If not, look for path provided by user.
if(length(msconvertLocation) == 0){
msconvertLocation <- readLines(file.path(userGivenPath,"Specify_ProteoWizard_Location.txt"))
if (msconvertLocation == "\"\""){  # Empty file check
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and no location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}else{
# Ensure consistent "/" "\"
msconvertLocation <- gsub("\\\\\\\\", "\\\\", msconvertLocation)
msconvertLocation <- gsub("/", "\\\\", msconvertLocation)
if(dir.exists(msconvertLocation)){
msconvertLocation <- list.files(msconvertLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){
msconvertLocation <- dirname(msconvertLocation[[1]])
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}
}
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
msconvertLocation
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert"))
proteoWizardLocation = file.path(extData,"pwizPath","fake_MSConvert")
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
msconvertLocation
proteoWizardLocation
file.path(extData,"fakePwizPath")
mzEasy::findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"fakePwizPath", "fakeMSConvert"))
mzEasy::findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"fakePwizPath", "fakeMSConvert"))
msConvertFolderLocation = mzEasy::findpwiz(userGivenPath = "mjs",
proteoWizardLocation = file.path(extData,"fakePwizPath", "fakeMSConvert")))
msConvertFolderLocation = mzEasy::findpwiz(userGivenPath = "mjs",
proteoWizardLocation = file.path(extData,"fakePwizPath", "fakeMSConvert"))
# "userGivenPath" = directory that contains "Specify_ProteoWizard_Location.txt"
# "proteoWizardLocation"     = directory that contains msconvert.exe
findpwiz <- function(userGivenPath, proteoWizardLocation){
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){ # If length is 1 or greater then msconvert.exe was found (or multiple installations), return one
msconvertLocation <- dirname(msconvertLocation[[1]])
}
# Check if msconvert was found. If not, look for path provided by user.
if(length(msconvertLocation) == 0){
msconvertLocation <- readLines(file.path(userGivenPath,"Specify_ProteoWizard_Location.txt"))
if (msconvertLocation == "\"\""){  # Empty file check
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and no location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}else{
# Ensure consistent "/" "\"
msconvertLocation <- gsub("\\\\\\\\", "\\\\", msconvertLocation)
msconvertLocation <- gsub("/", "\\\\", msconvertLocation)
if(dir.exists(msconvertLocation)){
msconvertLocation <- list.files(msconvertLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){
msconvertLocation <- dirname(msconvertLocation[[1]])
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}
}
return(msconvertLocation)
}
msConvertFolderLocation = mzEasy::findpwiz(userGivenPath = "mjs",
proteoWizardLocation = file.path(extData,"fakePwizPath", "fakeMSConvert"))
file.path(extData,"fakePwizPath", "fakeMSConvert")
extData <- system.file("extdata", package="mzEasy")
extData <- system.file("extdata", package="mzEasy")
extData <- system.file("extdata", package="mzEasy")
library(mzEasy)
extData <- system.file("extdata", package="mzEasy")
progFiles <- shell(cmd= "ECHO %ProgramFiles%\\ProteoWizard", translate=TRUE, intern=T)
pwizLocation <- mzEasy::findpwiz(userGivenPath = "",
proteoWizardLocation = progFiles)
commands <- convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = pwizLocation)
commands
system(command = as.character(commands[[1]]))
file.exists(file.path(extData, "test", "Example_Chromatogram.mzXML.mzXML" ))
testExist <- file.exists(file.path(extData, "test", "Example_Chromatogram.mzXML.mzXML" ))
extData <- system.file("extdata", package="mzEasy")
progFiles <- shell(cmd= "ECHO %ProgramFiles%\\ProteoWizard", translate=TRUE, intern=T)
pwizLocation <- mzEasy::findpwiz(userGivenPath = "",
proteoWizardLocation = progFiles)
commands <- convertRawDataCommands(pathToRawData = file.path(extData, "chromatogram"),
whereFilesCreated = file.path(extData, "test"),
msConvertFolderLocation = pwizLocation)
system(command = as.character(commands[[1]]))
testExist <- file.exists(file.path(extData, "test", "Example_Chromatogram.mzXML.mzXML" ))
testExist
extData <- system.file("extdata", package="mzEasy")
extData
a <- findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"fakePwizPath", "fakeMSConvert"))
a
b <- mzEasy::findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"fakePwizPath")))
b <- mzEasy::findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"fakePwizPath"))
b
a
d <- findpwiz(userGivenPath = "", proteoWizardLocation = file.path(extData,"chromatogram"))
file.path(extData,"chromatogram")
d <- findpwiz(userGivenPath = file.path(extData,"fakePwizPath", "Specify_ProteoWizard_Location.txt"),
proteoWizardLocation = file.path(extData, "chromatogram"))
file.path(extData,"fakePwizPath", "Specify_ProteoWizard_Location.txt")
d <- findpwiz(userGivenPath = file.path(extData,"fakePwizPath"),
proteoWizardLocation = file.path(extData, "chromatogram"))
file.path(extData,"fakePwizPath")
readLines(file.path(extData,"fakePwizPath","Specify_ProteoWizard_Location.txt"))
d <- findpwiz(userGivenPath = file.path(extData,"fakePwizPath"),
proteoWizardLocation = file.path(extData, "chromatogram"))
# "userGivenPath" = directory that contains "Specify_ProteoWizard_Location.txt"
# "proteoWizardLocation"     = directory that contains msconvert.exe
findpwiz <- function(userGivenPath, proteoWizardLocation){
msconvertLocation <- list.files(proteoWizardLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){ # If length is 1 or greater then msconvert.exe was found (or multiple installations), return one
msconvertLocation <- dirname(msconvertLocation[[1]])
}
# Check if msconvert was found. If not, look for path provided by user.
if(length(msconvertLocation) == 0){
msconvertLocation <- readLines(file.path(userGivenPath,"Specify_ProteoWizard_Location.txt"))
if (length(msconvertLocation) == 0){  # Empty file check
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and no location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}else{
# Ensure consistent "/" "\"
msconvertLocation <- gsub("\\\\\\\\", "\\\\", msconvertLocation)
msconvertLocation <- gsub("/", "\\\\", msconvertLocation)
if(dir.exists(msconvertLocation)){
msconvertLocation <- list.files(msconvertLocation, recursive = TRUE, pattern = "msconvert.exe", full.names = TRUE)
if(length(msconvertLocation) >= 1){
msconvertLocation <- dirname(msconvertLocation[[1]])
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}else{
msconvertLocation <- "Unable to find msconvert.exe in \"Program Files\" and did not find msconvert.exe within location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
}
}
}
return(msconvertLocation)
}
d <- findpwiz(userGivenPath = file.path(extData,"fakePwizPath"),
proteoWizardLocation = file.path(extData, "chromatogram"))
d
d2 <- "Unable to find msconvert.exe in \"Program Files\" and no location provided in: <br> mzEasy\\www\\Specify_ProteoWizard_Location.txt"
a
b
file.path(extData,"fakePwizPath", "fakeMSConvert")
dirname(a)
b <- findpwiz(userGivenPath = "",
proteoWizardLocation = dirname(a))
a <- findpwiz(userGivenPath = "",
proteoWizardLocation = progFiles)
a
# Load external functions
source(file.path(appwd, "functions", "convertRawDataCommands.r"))
shiny::runApp('inst/app')
shiny::runApp('inst/app')
library(mzEasy)
runApp('inst/app')
devtools::document()
devtools::document()
desc_add_author(giver="Chase", family ="Clark", email = "chasec288@gmail.com", role="cre")
devtools::desc_add_author(giver="Chase", family ="Clark", email = "chasec288@gmail.com", role="cre")
desc::desc_add_author(giver="Chase", family ="Clark", email = "chasec288@gmail.com", role="cre")
desc::desc_add_author(given="Chase", family ="Clark", email = "chasec288@gmail.com", role="cre")
desc::desc_add_author(given="Chase", family ="Clark", email = "chasec288@gmail.com", role=c("aut","cre")
desc::desc_add_author(given="Chase", family ="Clark", email = "chasec288@gmail.com", role=c("aut","cre"))
?desc::desc_add_author(given="Chase", family ="Clark", email = "chasec288@gmail.com", role=c("aut","cre"))
library(mzEasy)
library(mzEasy)
?mzEasy::findpwiz()
devtools::use_mit_license()
s
devtools::document(),
devtools::document()
library(mzEasy)
?mzEasy::findpwiz()
devtools::document()
devtools::document()
devtools::document()
library(mzEasy)
devtools::document()
library(mzEasy)
shiny::runApp('inst/app')
shiny::runApp('inst/app')
shiny::runApp('inst/app')
.libPaths()
shiny::runApp('inst/app')
install.packages("jsonlite")
shiny::runApp('inst/app')
shiny::runApp()
shiny::runApp()
getwd()
.libPaths()
.libPaths()[[1]]
libLoc <- .libPaths()[[1]]
mranSnap <- "https://cran.microsoft.com/snapshot/2018-06-30"
install.packages(c("devtools"),
repo = mranSnap,
lib = libLoc,
dependencies = c("Depends",
"Imports",
"LinkingTo"))
devtools::install_github("tidyverse/ggplot2@4caac5f",
lib = libLoc,
dependencies = c("Depends",
"Imports",
"LinkingTo"))
install.packages(c("shiny", "gridExtra", "svglite", "jsonlite"),
repo = mranSnap,
lib = libLoc,
dependencies = c("Depends",
"Imports",
"LinkingTo"))
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("mzR")
shiny::runApp('inst/app')
library(mzEasy)
runApp('inst/app')
library(ggplot2)
ggplot()+geom_point(aes(x=1,y=1))
?install.packages
devtools::install_github("tidyverse/ggplot2@4caac5f",
lib = libLoc,
dependencies = c("Depends",
"Imports",
"LinkingTo","Suggests"))
devtools::install_github("tidyverse/ggplot2@4caac5f",
lib = libLoc,
dependencies = c("Depends",
"Imports",
"LinkingTo","Suggests"))
devtools::install_github("tidyverse/ggplot2@4caac5f",
lib = libLoc,
dependencies = c("Depends",
"Imports",
"LinkingTo","Suggests"))
shiny::runApp('inst/app')
library(shiny)
library(mzR)
library(ggplot2)
library(gridExtra)
library(mzEasy)
ggplot()+geom_point(aes(x=1,y=1))
install.packages(roxygen)
install.packages(roxygen2)
install.packages("roxygen2")
install.packages("testtaht")
install.packages("testhat")
install.packages("testhat", type="source")
devtools::install_github("r-lib/testthat")
runApp('inst/app')
.libPaths("C:/Users/CMC/Documents/GitHub/mzEASYInstaller/inst/app/library/packageLibrary")
libLoc <- .libPaths()[[1]]
mranSnap <- "https://cran.microsoft.com/snapshot/2018-06-30"
install.packages(c("devtools"),
repo = mranSnap,
lib = libLoc)
devtools::install_github("tidyverse/ggplot2@4caac5f",
lib = libLoc)
install.packages(c("devtools"), repo = mranSnap, lib = libLoc)
shiny::runApp('inst/app')
library(mzEasy)
runApp('inst/app')
